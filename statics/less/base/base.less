

.number { font-family: Helvetica,"黑体";}

// 尺寸
.w(@width){ width:@width;}
.h(@height){ height:@height;}
.size(@width,@height:@width){ width:@width; height:@height; }

.full(){ width:100%; height:100%; }
.full(x){ width:100%;}
.full(y){ height:100%; }

.half(){ width:50%; height:50%; }
.half(x) { widht:50%;}
.half(y) { height:50%;}

.min-height(@minheight){ min-height:@minheight; 
  height:~"@{minheight}\9";}
.max-height(@maxheight){ min-height:@maxheight; 
  height:~"@{maxheight}\9";}

.min-width(@minwidth){ min-height:@minwidth; 
  height:~"@{minwidth}\9";}
.max-width(@maxwidth){ min-height:@maxwidth; 
  height:~"@{maxwidth}\9";}

// 布局
//浮动
 .fl() { float:left; *display:inline;} //ie6-7双倍margin bug处理
 .fr() { float:right; *display:inline;}
 .clearfix{
  *zoom:1;
  &:before, &:after{ content:""; display:table; }
  &:after{ clear: both; }
 }
 .clear(@clear:both) { clear:@clear;}
 //display 简写
 .db(){display:block;}
 .dbi() { display:inline-block; *display:inline; *zoom:1;}
 .di(){ display:inline;}
 //定位简写
 .ps() { position:static;}
 .pr() { position:relative; *zoom:1;}
 .pa() { position:absolute;}
 .pf() { position:fixed;}
 .po() { position:static; margin:0;}// 复位

 .mt(@top:10px) { margin-top:@top;}
 .mb(@bottom){ margin-bottom:@bottom;}
 .ml(@left) { margin-left:@left;}
 .mr(@right) { margin-right:@right;}
 .pt(@top) { padding-top:@top;}
 .pb(@bottom) { padding-bottom:@bottom;}
 .pl(@left) { padding-left:@left;}
 .pr(@right) { padding-right:@right;}

 // 位置简写
 .lt(@l,@t:inherit) { left:@l; top:@t;}
 .rt(@r,@t:inherit) { right:@r; top:@t;}
 .lb(@l,@b:inherit) { left:@l; bottom:@b;}
 .rb(@r,@b:inherit) { right:@r; bottom:@b;}

 //窗口固定
   .fixed(@_,@side:0,@fix:0){
        position: fixed;
        _position:absolute;
        *zoom:1; 
    }
    .fixed(lt,@side:0,@fix:0){
        left:unit(@side,px);
        top:unit(@fix,px);
    }
    .fixed(rt,@side:0,@fix:0){
        right:unit(@side,px);
        top:unit(@fix,px);
    }
    .fixed(lb,@side:0,@fix:0){
        left:unit(@side,px);
        bottom:unit(@fix,px);
    }
    .fixed(rb,@side:0,@fix:0){
        right:unit(@side,px);
        bottom:unit(@fix,px);
    }

//居中
.auto() { margin-left:auto; margin-right:0;}
.auto(y) { display:table-cell; vertical-align: middle; }

//居中定位·绝对定位方式（未定义/不确定尺寸时,不兼容IE6）
.ct(){position:absolute;margin:auto;left:0;top:0;right:0;bottom:0;}
.ct(x){position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;}
.ct(y){position:absolute;margin-top:auto;margin-bottom:auto;top:0;bottom:0;}

.vux-sticky() {
      position: -webkit-sticky;
      position:sticky;
       z-index:998; width:100%;  
    }
    .vux-fixed ()  { 
      position: fixed;  z-index:998; width:100%; 
    }

.pointer(){ cursor: pointer;}
//字体
//粗体
.bold(@bold:bold) { font-weight: @bold; }
//斜体
.italic() { font-style:italic;}
//正常
.normal() { font-weight: normal; font-style: normal;}

// 字体大小与行高
.fontsize-lh(@size,@lh:inherit) {
           font-size:@size; // 此处需要自己定义单位
           line-height:@lh; }
// 行高与高度
.height-lh(@height,@lh:inherit){ height:@height; line-height: @lh; }
// 行高
.lh(@lh){ line-height:@lh;}
// 字体大小 行高 高度
.fontsize-lh-h( @fs,@lh,@h ){ @{fs}:@fs;@{lh}:@lh;@{h}:@h; }
//字体颜色
.color(@color){
  color:@color;
}
.color(@color,@hovercolor){
  color:@color;
  &:hover { color:@hovercolor;}
}

.tac { text-align:center;}

// 透明度
.opacity(@opacity){
  /* older safari/Chrome browsers */  
    -webkit-opacity: @opacity;  
    /* Netscape and Older than Firefox 0.9 */  
    -moz-opacity: @opacity;  
    /* Safari 1.x (pre WebKit!) 老式khtml内核的Safari浏览器*/  
    -khtml-opacity: @opacity;  
    /* IE9 + etc...modern browsers */  
    opacity: @opacity;  
    /* IE 4-9 */  
    @opacityPercentage: @opacity * 100; 
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opacityPercentage})"; 
    filter: ~"alpha(opacity = @{opacityPercentage})";
}
// 单行文本 不折行 用...
.nobreak(){ 
  text-overflow: ellipsis; 
  white-space: normal;
  overflow:hidden;  // 需要设置宽度
  word-break:keep-all;
  }
  //断词处理
.nobreak(clip){
  text-overflow: clip; 
  white-space: normal;
  overflow:hidden;  // 需要设置宽度
  word-break:keep-all;
}

//多行文本 低版本浏览器不支持
.multiline-nobreak(@line) {
  display: -webkit-box !important;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  -webkit-box-orient: vertical;
  -webkit-line-clamp:2;    /**显示的行数***/
 }

 //文本缩进
 //文本缩进隐藏(可用于按钮,banner等位置背景图已有图片文字,保留文字作为seo优化?)
 .indent(@indent:-200%){
  text-indent: @indent;
  overflow:hidden; ////推荐使用此方式,减少移动端重绘能耗,根据需要扩大倍数至-200%+
 }
 // 反向文字
 .refont(){ direction: rtl; unicode-bidi: bidi-override;}

 
//圆角
.borderradius(@radius:2px) {
  -moz-border-radius:@radius;
  -webkit-border-radius:@radius;
  border-radius:@radius;
}
.borderradius1(@radius:2px) {

  //兼容4.x 安卓不支持缩写
  .px2rem(border-top-left-radius,@radius);
  .px2rem(border-top-right-radius,@radius);
  .px2rem(border-bottom-right-radius,@radius);
  .px2rem(border-bottom-left-radius,@radius);
  .px2rem(border-radius,@radius);
}

//移动端 flexbox
.flexbox(@dir:row, @justifycontent:center,@align:center) {
  display:box;
  display:-webkit-box;
  display:-o-box;
  display:-moz-box;
  display:-ms-flexbox;
  display: -webkit-flex;
  display:flex;

  .flexdirection(@dir); // 属性决定主轴的方向（即项目的排列方向）
  .flexjustify(@justifycontent); //定义了项目在主轴上的对齐方式
  .flexalign(@align);//定义项目在交叉轴上如何对齐。
}

.flexdirection(@dir:row) when(@dir = row) {
  -webkit-box-orient:horizontal;
  -moz-box-orient:horizontal;
  -ms-box-orient:horizontal;
}
.flexdirection(@dir:row) when(@dir = column) {
  -webkit-box-orient:vertical;
  -moz-box-orient:vertical;
  -ms-box-orient:vertical;
}
.flexdirection(@dir:row) {
  -webkit-flex-direction: @dir;
  -moz-flex-direction: @dir;
  -ms-flex-direction: @dir;
  -o-flex-direction: @dir;
  flex-direction: @dir;
}

.flexjustify(@jc: center) when(@jc = flex-start) {
  -webkit-box-pack:start;
  -moz-box-pack:start;
  -ms-box-pack:start;
  -webkit-flex-pack:start;
  -moz-flex-pack:start;
  -ms-flex-pack:start;
}
.flexjustify(@jc: center) when(@jc = flex-end) {
  -webkit-box-pack:end;
  -moz-box-pack:end;
  -ms-box-pack:end;
  -webkit-flex-pack:end;
  -moz-flex-pack:end;
  -ms-flex-pack:end;
}
.flexjustify(@jc: center) when(@jc = space-between) {
  -webkit-box-pack:justify;
  -moz-box-pack:justify;
  -ms-box-pack:justify;
  -webkit-flex-pack:justify;
  -moz-flex-pack:justify;
  -ms-flex-pack:justify;
}
.flexjustify(@jc: center) when(@jc = space-around) {
  -webkit-box-pack:center;
  -moz-box-pack:center;
  -ms-box-pack:center;
  -webkit-flex-pack:center;
  -moz-flex-pack:center;
  -ms-flex-pack:center;
}
.flexjustify(@jc:center) {
    /**父元素水平居中***/
    /* 09版 */
    -webkit-box-pack: @jc;
    /* 12版 */
    -webkit-justify-content: @jc;
    -moz-justify-content: @jc;
    -ms-justify-content: @jc;
    -o-justify-content: @jc;
    justify-content: @jc;
}
.flexalign(@vc:center){
  /**父元素垂直居中**/
  /* 09版 */
    -webkit-box-align: @vc;
    /* 12版 */
    -webkit-align-items: @vc;
    -moz-align-items: @vc;
    -ms-align-items: @vc;
    -o-align-items: @vc;
    align-items: @vc;
}

.flexalign(@jc: center) when(@jc = flex-start) {
  -webkit-box-align: start;
  -moz-box-align: start;
  -ms-flex-align: start;
  -webkit-align-items: flex-start; /* Safari */
  align-items: flex-start;
}
.flexalign(@jc: center) when(@jc = flex-end) {
  -webkit-box-align:end;
  -moz-box-align:end;
  -ms-box-align:end;
   -webkit-flex-align:end;
  -moz-flex-align:end;
  -ms-flex-align:end;
}
.flexalign(@jc: center) when(@jc = flex-start) {
  -webkit-box-align: start;
  -moz-box-align: start;
  -ms-flex-align: start;
}
.flexalign(@jc: center) when(@jc = center) {
  -webkit-box-align: center;
  -moz-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: flex-center; /* Safari */
  align-items: flex-center;
}

.flex(@var: 1, @total: 1) {
  width: @var/@total*100%;
  -webkit-box-flex:@var;
  -moz-box-flex:@var;
  -webkit-flex:@var;
  -ms-flex:@var;
  flex:@var;

}
.order(@number){
  -webkit-box-ordinal-group: @number;
  -moz-box-ordinal-group: @number;
  -ms-flex-order: @number;
  -webkit-order: @number;
  order: @number;
}

.flex-hw(@hw:wrap) {
  /**默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。***/
    /* 09版 */
    -webkit-box-lines: multiple;
    /* 12版 */
    -webkit-flex-wrap: @hw;
    -moz-flex-wrap: @hw;
    -ms-flex-wrap: @hw;
    -o-flex-wrap: @hw;
    flex-wrap: @hw;
/***可能取三个值 nowrap(默认) 不换行wrap 换行 第一行在上方wrap-reverse 换行第一行在下方***/
}
